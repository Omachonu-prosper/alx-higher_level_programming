======================================
Documentation for 2-matrix_divided.py
======================================

Import the function we need to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Case: dividing a matrix by 3
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Case: Rows of matrix have varible length
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [2, 3, 4, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Case: div is a string
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'g')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Case: div is negative
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
    [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

Case: div is 0
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Case: matrix is not a list of integers of floats
    >>> matrix_divided([[1, 2, True], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Case: matrix is a number
    >> matrix_divided(2, 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats