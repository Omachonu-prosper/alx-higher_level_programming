===================================
Documentation for 0-add_integer.py
===================================

This library contains a function ``add_integer()``
Which adds two values together
The function accepts two arguements ``(a, b)``
``a`` and ``b`` must be either an integer or a float
and must be converted to an integer before addition if either is a float

Import the function we need
    >>> add_integer = __import__('0-add_integer').add_integer

Case: ``a`` and ``b`` are positive
    >>> add_integer(1, 2)
    3

Case: ``a`` is positive and ``b`` is negative
    >>> add_integer(1, -2)
    -1

Case: ``a`` and ``b`` are negative
    >>> add_integer(-1, -2)
    -3

Case: ``a`` is a float (ps: The function converts floats to integers before addition)
    >>> add_integer(1.5, 2)
    3

Case: ``a`` is a string
    >>> add_integer('d', 3)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Case: ``b`` is a boolean
    >>> add_integer(1, True)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Case: only one arguement passed (``b`` has a default value of 98)
    >>> add_integer(2)
    100

Case: No arguements passed
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Case: Float NaN
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

Case: Float overflow
    >>> import sys
    >>> add_integer(sys.float_info.max)
    179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858466
